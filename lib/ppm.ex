defmodule PPM do

  # write(Name, Image) The image is a list of rows, each row a list of
  # tuples {R,G,B} where the values are flots from 0 to 1. The image
  # is written using PMM format P6 and color depth 0-255. This means that
  # each tuple is written as three bytes.

  def write(name, image) do
    height = length(image)
    width = length(List.first(image))
    {:ok, file} = File.open(name, [:write, :binary])
    IO.puts(file, "P6")
    IO.puts(file, "#generated by ppm.ex")
    IO.puts(file, "#{width} #{height}")
    IO.puts(file, "255")
    rows(image, file)
    File.close(file)
  end

  defp rows(rows, file) do
    Enum.each(rows, fn r -> IO.write(file, row(r)) end)
  end

  defp row(row) do
    Enum.reduce(row, [], fn({r, g, b}, a) -> [r, g, b| a] end)
  end

end